# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import snd.modelos.dirigentes


class Migration(migrations.Migration):

    dependencies = [
        ('entidades', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CAFoto',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('foto', models.ImageField(null=True, upload_to='fotos_escenarios', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CAPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('precio', models.PositiveIntegerField()),
                ('descripcion', models.TextField(verbose_name='descripción')),
            ],
        ),
        migrations.CreateModel(
            name='CaracterizacionEscenario',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('capacidad_espectadores', models.CharField(max_length=50, verbose_name='capacidad de zona espectadores')),
                ('metros_construidos', models.CharField(max_length=50, verbose_name='metros cuadrados construídos')),
                ('tipo_superficie_juego', models.CharField(null=True, max_length=100)),
                ('clase_acceso', models.CharField(choices=[('pr', 'Privado'), ('dul', 'De Uso Libre'), ('pcp', 'Público Con Pago')], max_length=3, verbose_name='tipo de acceso')),
                ('descripcion', models.CharField(null=True, max_length=1024, verbose_name='descripción')),
                ('caracteristicas', models.ManyToManyField(to='entidades.CaracteristicaEscenario')),
                ('clase_uso', models.ManyToManyField(to='entidades.TipoUsoEscenario')),
            ],
        ),
        migrations.CreateModel(
            name='CentroAcondicionamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100, verbose_name='dirección')),
                ('telefono', models.CharField(max_length=50, verbose_name='teléfono')),
                ('email', models.EmailField(max_length=254)),
                ('comuna', models.CharField(max_length=10)),
                ('barrio', models.CharField(max_length=20)),
                ('estrato', models.IntegerField(choices=[(1, 'Uno'), (2, 'Dos'), (3, 'Tres'), (4, 'Cuatro'), (5, 'Cinco'), (6, 'Seis')])),
                ('latitud', models.FloatField(max_length=10)),
                ('longitud', models.FloatField(max_length=10)),
                ('altura', models.FloatField(max_length=10)),
                ('nombre_administrador', models.CharField(null=True, max_length=50)),
                ('contacto', models.TextField(null=True, verbose_name='información de contacto', blank=True)),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (2, 'Inactivo')], default=1, verbose_name='estado del Centro de Acondicionamiento Físico')),
                ('ciudad', models.ForeignKey(to='entidades.Ciudad')),
                ('clases', models.ManyToManyField(to='entidades.CAClase', blank=True)),
                ('entidad', models.ForeignKey(to='entidades.Entidad')),
                ('servicios', models.ManyToManyField(to='entidades.CAServicio', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComposicionCorporal',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('peso', models.FloatField()),
                ('estatura', models.FloatField()),
                ('RH', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=4)),
                ('talla_camisa', models.CharField(max_length=100)),
                ('talla_pantaloneta', models.CharField(max_length=100)),
                ('talla_zapato', models.CharField(max_length=100)),
                ('porcentaje_grasa', models.CharField(max_length=100)),
                ('porcentaje_musculo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='DatoHistorico',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('descripcion', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Deportista',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer')], max_length=11, verbose_name='Genero del Deportista')),
                ('tipo_id', models.CharField(choices=[('TI', 'Tarjeta de Identidad'), ('CED', 'Cédula de ciudadanía'), ('CEDEX', 'Cédula de extranjero'), ('PAS', 'Pasaporte')], default='CED', max_length=10, verbose_name='Tipo de Identificación')),
                ('identificacion', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('barrio', models.CharField(max_length=100)),
                ('comuna', models.CharField(max_length=100)),
                ('email', models.EmailField(null=True, max_length=254, blank=True)),
                ('telefono', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('activo', models.BooleanField(default=True)),
                ('video', models.URLField(null=True, max_length=1024, verbose_name='Video', blank=True)),
                ('foto', models.ImageField(null=True, upload_to='fotos_deportistas', blank=True)),
                ('ciudad_nacimiento', models.ForeignKey(to='entidades.Ciudad', blank=True)),
                ('disciplinas', models.ManyToManyField(to='entidades.TipoDisciplinaDeportiva')),
                ('entidad', models.ForeignKey(to='entidades.Entidad')),
                ('nacionalidad', models.ManyToManyField(to='entidades.Nacionalidad')),
            ],
        ),
        migrations.CreateModel(
            name='Dirigente',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('tipo_identificacion', models.CharField(choices=[('CC', 'Cédula de ciudadanía'), ('CE', 'Cédula de extranjería'), ('PT', 'Pasaporte')], max_length=2, verbose_name='Tipo de Identificación')),
                ('identificacion', models.CharField(max_length=20, verbose_name='Número de Identificación')),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('genero', models.CharField(choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer')], max_length=6, verbose_name='Género')),
                ('cargo', models.CharField(max_length=100, verbose_name='Nombre del Cargo')),
                ('telefono', models.CharField(max_length=100, verbose_name='Teléfono')),
                ('email', models.EmailField(null=True, max_length=254, blank=True)),
                ('fecha_posesion', models.DateField(verbose_name='Fecha de Posesión')),
                ('fecha_retiro', models.DateField(null=True, verbose_name='Fecha de Retiro', blank=True)),
                ('foto', models.ImageField(null=True, upload_to=snd.modelos.dirigentes.Dirigente.foto_name, blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('descripcion', models.CharField(max_length=500, verbose_name='Descripción o Logros')),
                ('entidad', models.ForeignKey(null=True, blank=True, to='entidades.Entidad')),
                ('nacionalidad', models.ManyToManyField(to='entidades.Nacionalidad')),
                ('superior', models.ForeignKey(null=True, blank=True, to='snd.Dirigente')),
            ],
        ),
        migrations.CreateModel(
            name='Entrenador',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('estado', models.BooleanField(choices=[('Activo', True), ('Inactivo', False)], default=True)),
                ('nombres', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('genero', models.CharField(choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer')], max_length=11)),
                ('foto', models.ImageField(null=True, upload_to='fotos_entrenadores', blank=True)),
                ('tipo_id', models.CharField(choices=[('CED', 'Cédula de ciudadanía'), ('CEDEX', 'Cédula de extranjero'), ('PAS', 'Pasaporte')], default='CED', max_length=5)),
                ('nro_id', models.BigIntegerField()),
                ('telefono_fijo', models.CharField(max_length=50, blank=True)),
                ('telefono_celular', models.CharField(max_length=50, blank=True)),
                ('correo_electronico', models.EmailField(max_length=254, blank=True)),
                ('fecha_nacimiento', models.DateField()),
                ('altura', models.IntegerField(blank=True)),
                ('peso', models.IntegerField(blank=True)),
                ('ciudad', models.ForeignKey(to='entidades.Ciudad', blank=True)),
                ('entidad_vinculacion', models.ForeignKey(to='entidades.Entidad')),
                ('nacionalidad', models.ManyToManyField(to='entidades.Nacionalidad')),
            ],
        ),
        migrations.CreateModel(
            name='Escenario',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('latitud', models.FloatField(max_length=10)),
                ('longitud', models.FloatField(max_length=10)),
                ('altura', models.FloatField(max_length=10)),
                ('comuna', models.CharField(max_length=10)),
                ('barrio', models.CharField(max_length=20)),
                ('estrato', models.CharField(choices=[('1', 'Uno'), ('2', 'Dos'), ('3', 'Tres'), ('4', 'Cuatro'), ('5', 'Cinco'), ('6', 'Seis')], max_length=1)),
                ('nombre_administrador', models.CharField(null=True, max_length=50)),
                ('activo', models.BooleanField(default=True)),
                ('descripcion', models.CharField(null=True, max_length=1024, verbose_name='descripción')),
                ('ciudad', models.ForeignKey(to='entidades.Ciudad')),
                ('entidad', models.ForeignKey(to='entidades.Entidad')),
            ],
        ),
        migrations.CreateModel(
            name='ExperienciaLaboral',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('nombre_cargo', models.CharField(max_length=50)),
                ('institucion', models.CharField(max_length=150)),
                ('fecha_comienzo', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('entrenador', models.ForeignKey(to='snd.Entrenador')),
            ],
        ),
        migrations.CreateModel(
            name='FormacionDeportiva',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('denominacion_diploma', models.CharField(max_length=150)),
                ('nivel', models.CharField(max_length=50, blank=True)),
                ('institucion_formacion', models.CharField(max_length=100)),
                ('fecha_comienzo', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('disciplina_deportiva', models.ManyToManyField(to='entidades.TipoDisciplinaDeportiva')),
                ('entrenador', models.ForeignKey(to='snd.Entrenador')),
                ('pais_formacion', models.ForeignKey(to='entidades.Nacionalidad')),
            ],
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('foto', models.ImageField(null=True, upload_to='fotos_escenarios', blank=True)),
                ('escenario', models.ForeignKey(to='snd.Escenario')),
            ],
        ),
        migrations.CreateModel(
            name='Funcion',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripción')),
                ('dirigente', models.ForeignKey(to='snd.Dirigente')),
            ],
        ),
        migrations.CreateModel(
            name='HistorialDeportivo',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('lugar', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('institucion_equipo', models.CharField(null=True, max_length=100, blank=True)),
                ('tipo', models.CharField(choices=[('Competencia', 'Competencia'), ('Premio', 'Premio'), ('Logro Deportivo', 'Logro Deportivo'), ('Participacion en Equipo', 'Participacion en Equipo')], max_length=100, verbose_name='Tipo Historial')),
                ('deportista', models.ForeignKey(to='snd.Deportista')),
            ],
        ),
        migrations.CreateModel(
            name='HorarioDisponibilidad',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('descripcion', models.CharField(max_length=1024)),
                ('dias', models.ManyToManyField(to='entidades.Dias')),
                ('escenario', models.ForeignKey(to='snd.Escenario')),
            ],
        ),
        migrations.CreateModel(
            name='InformacionAcademica',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('institucion', models.CharField(max_length=100)),
                ('nivel', models.CharField(choices=[('Jardin', 'Jardin'), ('Primaria', 'Primaria'), ('Bachillerato', 'Bachillerato'), ('Pregrado', 'Pregrado'), ('Postgrado', 'Postgrado')], max_length=20)),
                ('estado', models.CharField(choices=[('Finalizado', 'Finalizado'), ('Incompleto', 'Incompleto'), ('Actual', 'Actual')], max_length=20)),
                ('profesion', models.CharField(null=True, max_length=100, blank=True)),
                ('grado_semestre', models.IntegerField(null=True, verbose_name='Grado o Semestre', blank=True)),
                ('fecha_finalizacion', models.IntegerField(null=True, verbose_name='Año Finalización', blank=True)),
                ('deportista', models.ForeignKey(to='snd.Deportista')),
                ('pais', models.ForeignKey(to='entidades.Nacionalidad')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, serialize=False, primary_key=True, verbose_name='ID')),
                ('url', models.CharField(null=True, max_length=1024, verbose_name='url')),
                ('descripcion', models.CharField(null=True, max_length=1024)),
                ('escenario', models.ForeignKey(to='snd.Escenario')),
            ],
        ),
        migrations.AddField(
            model_name='datohistorico',
            name='escenario',
            field=models.ForeignKey(to='snd.Escenario'),
        ),
        migrations.AddField(
            model_name='contacto',
            name='escenario',
            field=models.ForeignKey(to='snd.Escenario'),
        ),
        migrations.AddField(
            model_name='composicioncorporal',
            name='deportista',
            field=models.ForeignKey(to='snd.Deportista'),
        ),
        migrations.AddField(
            model_name='caracterizacionescenario',
            name='escenario',
            field=models.ForeignKey(to='snd.Escenario'),
        ),
        migrations.AddField(
            model_name='caracterizacionescenario',
            name='tipo_disciplinas',
            field=models.ManyToManyField(to='entidades.TipoDisciplinaDeportiva'),
        ),
        migrations.AddField(
            model_name='caracterizacionescenario',
            name='tipo_escenario',
            field=models.ForeignKey(to='entidades.TipoEscenario'),
        ),
        migrations.AddField(
            model_name='caplan',
            name='centro',
            field=models.ForeignKey(to='snd.CentroAcondicionamiento'),
        ),
        migrations.AddField(
            model_name='cafoto',
            name='centro',
            field=models.ForeignKey(to='snd.CentroAcondicionamiento'),
        ),
    ]
